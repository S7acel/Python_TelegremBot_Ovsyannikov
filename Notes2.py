import os


path = f'C:/Users/user/PycharmProjects/Python_TelegremBot_Ovsyannikov/Notes/'  # –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def check_extension(f):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ '.txt' –≤ –∫–æ–Ω—Ü–µ
    try:
        if not f.endswith('.txt'):
            f += '.txt'
        return f
    except:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')


def check_directory(pth):  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
    try:
        if not os.path.exists((pth)):
            os.mkdir(pth)
    except Exception as err:
        return f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}'


def build_note(note_name, note_text, chat_id):
    try:
        check_directory(f'{path}/{chat_id}')
        note_name = check_extension(note_name)
        with open(f'{path}/{chat_id}/{note_name}', 'w', encoding='utf-8') as f:
            f.write(note_text)
        return f'–§–∞–π–ª {note_name} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n'
    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. {e}"


def read_note(note_name, chat_id):  # –ü—Ä–æ—á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    try:
        note_name = check_extension(note_name)
        if os.path.isfile(f'{path}/{chat_id}/{note_name}'):
            with open(f'{path}/{chat_id}/{note_name}', 'r', encoding='utf-8') as f:
                text = f.read()
            return text
        else:
            return '–¢–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'
    except Exception as err:
        return f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {f}'



def create_note():  # —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    try:
        Name = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞\n')
        Text = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç\n')
        build_note(Name, Text)
    except:
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")


def edit_note(name, chat_id, new_text):  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
    try:
        name = check_extension(name)
        if os.path.exists(f'{path}/{chat_id}/{name}'):
            with open(f'{path}/{chat_id}/{name}', 'w', encoding='utf-8') as f:
                f.write(str(new_text))
                return (f'–§–∞–π–ª "{name}" –ò–∑–º–µ–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!')
        else:
            return ('–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞, –º–æ–∂–µ—Ç –æ—à–∏–±—Å—è? üòê')
    except Exception as err:
        return f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}'


def delete_note(name):  # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
    try:
        name = check_extension(name)
        if os.path.isfile(name):
            os.remove(name)
            print(f'–ó–∞–º–µ—Ç–∫–∞ {name} —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
        else:
            print('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ç–æ, —á–µ–≥–æ –∏ —Ç–∞–∫ –Ω–µ—Ç.')
    except:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')


def display_notes():  # –í—ã–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã
    try:
        notes = [note for note in os.listdir() if note.endswith('.txt')]
        reversed_notes = sorted(notes, key=len)
        if notes:
            for i in reversed_notes:
                print(i)
        else:
            print('–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')
    except:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')


def delete_all_notes():  # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
    try:
        notes = [note for note in os.listdir() if note.endswith('.txt')]
        if notes:
            for n in notes:
                delete_note(n)
            print('–í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã!')
        else:
            print('–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')
    except:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
        return True


def main():  # –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π
    try:
        print('–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ —Ü–∏—Ñ—Ä—É:', end='')
        print('''
    1 - —Å–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É
    2 - –ü—Ä–æ—á–µ—Å—Ç—å –∑–∞–º–µ—Ç–∫—É
    3 - –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
    4 - –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
    5 - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    6 - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã
    7 - –í—ã—Ö–æ–¥''')
        func = int(input('–í–≤–æ–¥: '))
        match func:
            case 1:
                create_note()
                return True
            case 2:
                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—á–µ—Å—Ç—å?\n')
                read_note(note_name)
                return True
            case 3:
                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\n')
                edit_note(note_name)
                return True
            case 4:
                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?\n')
                delete_note(note_name)
                return True
            case 5:
                display_notes()
                return True
            case 6:
                output = input('–í—ã —É–≤–µ—Ä–µ–Ω—ã? \n –î–∞ - "y" –ù–µ—Ç - \"n\" ')
                if output == 'y':
                    delete_all_notes()
                    return True
                else:
                    return True
            case 7:
                ...
            case _:
                print('–¢—ã –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 7 ;)')
                return True
    except:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')
        return True


if __name__ == '__main__':
    while main():
        pass
