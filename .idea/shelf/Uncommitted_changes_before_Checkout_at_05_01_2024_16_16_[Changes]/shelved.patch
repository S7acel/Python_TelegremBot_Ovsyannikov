Index: Notes_in_telegramm/telegramm_notes_hand.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from telegram.ext import Updater, Filters, CommandHandler, MessageHandler, ConversationHandler\r\nfrom do_not_save_files.secrets import API_TOKEN\r\nfrom notes2 import build_note, read_note, edit_note, delete_note, display_notes, delete_all_notes, logging\r\n\r\nDELETE_ALL, DETAILS, CREATE, READ, EDIT_DETAILS, EDIT, DELETE = range(7)\r\n\r\n\r\ndef greeting(update, context):  # —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /start)\r\n    text = '–ü—Ä–∏–≤–µ—Ç, —è NoteWizard - —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫. –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏ –∏ ' \\\r\n           '—Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏—Ö –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö. –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã –≤–∫–ª—é—á–∞—é—Ç –≤ —Å–µ–±—è:\\n\\n/create - ' \\\r\n           '—Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É.\\n/read - –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–º–µ—Ç–∫—É.\\n/edit - –∏–∑–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é ' \\\r\n           '–∑–∞–º–µ—Ç–∫—É.\\n/delete - —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–º–µ—Ç–∫—É.\\n/display - –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö ' \\\r\n           '–∑–∞–º–µ—Ç–æ–∫.\\n/delete_all_notes - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏.\\n\\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö, ' \\\r\n           '–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help. –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç—É!'\r\n    context.bot.send_message(chat_id=update.message.chat_id, text=text)\r\n    logging(update.message.chat_id)\r\n\r\n\r\ndef help_handler(update, context):  # —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /help)\r\n    context.bot.send_message(chat_id=update.message.chat_id, text='–£—Ö-—Ç—ã! –ù–∞ —ç—Ç–æ–º –≤–µ—Å—å –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∑–∞–∫–æ–Ω—á–∏–ª—Å—è! :( '\r\n                                                                  '\\n –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ '\r\n                                                                  '—É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ --> @Markceil\\n '\r\n                                                                  '–ë—ã–ª –±—ã –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω \uD83E\uDD29')\r\n\r\n\r\ndef display_notes_handler(update, context):  # —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤\r\n    notes_list = display_notes(update.message.chat_id)\r\n    if notes_list:\r\n        for i in notes_list:\r\n            context.bot.send_message(chat_id=update.message.chat_id, text=str(i))\r\n    else:\r\n        context.bot.send_message(chat_id=update.message.chat_id, text='–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')\r\n\r\n\r\ndef ask_to_delete_all_notes_handler(update, context):  # –°–ø—Ä–∞—à–∏–≤–∞–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤\r\n    # –ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤\r\n    if display_notes(update.message.chat_id):\r\n        update.message.reply_text(\r\n            f'–í—ã —É–≤–µ—Ä–µ–Ω—ã? –£–¥–∞–ª—è–µ–º—ã–µ —Ñ–∞–π–ª—ã: {\", \".join(display_notes(update.message.chat_id))} \\n –î–∞ - y/ –ù–µ—Ç - n')\r\n        return DELETE_ALL\r\n    else:\r\n        update.message.reply_text(f'–ó–∞–º–µ—Ç–æ–∫ - –Ω–µ—Ç \uD83D\uDC7F')\r\n        return ConversationHandler.END\r\n\r\n\r\ndef delete_all_handler(update, context):\r\n    result = delete_all_notes(update.message.chat_id, update.message.text)\r\n    update.message.reply_text(f'{result}')\r\n    return conversation_handler.END\r\n\r\n\r\ndef ask_note_name_handler(update, context):\r\n    update.message.reply_text(f'–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏')\r\n    return DETAILS\r\n\r\n\r\ndef details_note_handler(update, context):\r\n    context.user_data['note_name'] = update.message.text\r\n    update.message.reply_text(f\"–ù–∞–ø–∏—à–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏ {context.user_data['note_name']}\")\r\n    return CREATE\r\n\r\n\r\ndef create_note_handler(update, context):\r\n    result = build_note(context.user_data['note_name'], update.message.text, str(update.message.chat_id))\r\n    update.message.reply_text(f'{result}')\r\n    return ConversationHandler.END\r\n\r\n\r\ndef read_name_handler(update, context):\r\n    update.message.reply_text(f\"–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏\")\r\n    return READ\r\n\r\n\r\ndef read_note_handler(update, context):\r\n    result = read_note(update.message.text, update.message.chat_id)\r\n    update.message.reply_text(f\"{result}\")\r\n    return ConversationHandler.END\r\n\r\n\r\ndef ask_name_of_edit_handler(update, context):\r\n    update.message.reply_text(f\"–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏\")\r\n    return EDIT_DETAILS\r\n\r\n\r\ndef ask_details_of_edit_handler(update, context):\r\n    context.user_data['note_name'] = update.message.text\r\n    update.message.reply_text(f\"–ù–∞–ø–∏—à–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏ {update.message.text}\")\r\n    return EDIT\r\n\r\n\r\ndef final_edit_handler(update, context):\r\n    result = edit_note(context.user_data['note_name'], str(update.message.chat_id), update.message.text)\r\n    update.message.reply_text(f\"{result}\")\r\n    return ConversationHandler.END\r\n\r\n\r\ndef ask_delete_note(update, context):\r\n    update.message.reply_text(f'–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏')\r\n    return DELETE\r\n\r\ndef delete_handler(update, context):\r\n    result = delete_note(update.message.text, update.message.chat_id)\r\n    update.message.reply_text(f\"{result}\")\r\n    return ConversationHandler.END\r\n\r\nconversation_handler = ConversationHandler(\r\n    entry_points=[CommandHandler('start', greeting),\r\n                  CommandHandler('delete_all_notes', ask_to_delete_all_notes_handler),\r\n                  CommandHandler('create', ask_note_name_handler), CommandHandler('read', read_name_handler),\r\n                  CommandHandler('edit', ask_name_of_edit_handler), CommandHandler('delete', ask_delete_note)],\r\n    states={\r\n        DELETE_ALL: [MessageHandler(Filters.text & ~Filters.command, delete_all_handler)],\r\n        DETAILS: [MessageHandler(Filters.text & ~Filters.command, details_note_handler)],\r\n        CREATE: [MessageHandler(Filters.text & ~Filters.command, create_note_handler)],\r\n        READ: [MessageHandler(Filters.text & ~Filters.command, read_note_handler)],\r\n        EDIT_DETAILS: [MessageHandler(Filters.text & ~Filters.command, ask_details_of_edit_handler)],\r\n        EDIT: [MessageHandler(Filters.text & ~Filters.command, final_edit_handler)],\r\n        DELETE: [MessageHandler(Filters.text & ~Filters.command, delete_handler)]\r\n    },\r\n    fallbacks=[CommandHandler('cancel', greeting)]\r\n)\r\n\r\n\r\ndef main():\r\n    updater = Updater(token=API_TOKEN, use_context=True)\r\n    dispatcher = updater.dispatcher\r\n    dispatcher.add_handler(CommandHandler('start', greeting))\r\n    dispatcher.add_handler(CommandHandler('display', display_notes_handler))\r\n    dispatcher.add_handler(CommandHandler('help', help_handler))\r\n    dispatcher.add_handler(conversation_handler)\r\n    updater.start_polling()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n
===================================================================
diff --git a/Notes_in_telegramm/telegramm_notes_hand.py b/Notes_in_telegramm/telegramm_notes_hand.py
--- a/Notes_in_telegramm/telegramm_notes_hand.py	
+++ b/Notes_in_telegramm/telegramm_notes_hand.py	
@@ -17,22 +17,29 @@
 
 
 def help_handler(update, context):  # —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /help)
-    context.bot.send_message(chat_id=update.message.chat_id, text='–£—Ö-—Ç—ã! –ù–∞ —ç—Ç–æ–º –≤–µ—Å—å –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∑–∞–∫–æ–Ω—á–∏–ª—Å—è! :( '
-                                                                  '\n –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ '
-                                                                  '—É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ --> @Markceil\n '
-                                                                  '–ë—ã–ª –±—ã –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω ü§©')
+    context.bot.send_message(
+        chat_id=update.message.chat_id,
+        text='–£—Ö-—Ç—ã! –ù–∞ —ç—Ç–æ–º –≤–µ—Å—å –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∑–∞–∫–æ–Ω—á–∏–ª—Å—è! :( '
+        '\n –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ '
+        '—É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ --> @Markceil\n '
+        '–ë—ã–ª –±—ã –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω ü§©')
 
 
-def display_notes_handler(update, context):  # —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
+# —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
+def display_notes_handler(update, context):
     notes_list = display_notes(update.message.chat_id)
     if notes_list:
         for i in notes_list:
-            context.bot.send_message(chat_id=update.message.chat_id, text=str(i))
+            context.bot.send_message(
+                chat_id=update.message.chat_id, text=str(i))
     else:
-        context.bot.send_message(chat_id=update.message.chat_id, text='–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')
+        context.bot.send_message(
+            chat_id=update.message.chat_id,
+            text='–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')
 
 
-def ask_to_delete_all_notes_handler(update, context):  # –°–ø—Ä–∞—à–∏–≤–∞–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤
+# –°–ø—Ä–∞—à–∏–≤–∞–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤
+def ask_to_delete_all_notes_handler(update, context):
     # –ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
     if display_notes(update.message.chat_id):
         update.message.reply_text(
@@ -56,12 +63,15 @@
 
 def details_note_handler(update, context):
     context.user_data['note_name'] = update.message.text
-    update.message.reply_text(f"–ù–∞–ø–∏—à–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏ {context.user_data['note_name']}")
+    update.message.reply_text(
+        f"–ù–∞–ø–∏—à–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏ {context.user_data['note_name']}")
     return CREATE
 
 
 def create_note_handler(update, context):
-    result = build_note(context.user_data['note_name'], update.message.text, str(update.message.chat_id))
+    result = build_note(
+        context.user_data['note_name'], update.message.text, str(
+            update.message.chat_id))
     update.message.reply_text(f'{result}')
     return ConversationHandler.END
 
@@ -84,12 +94,15 @@
 
 def ask_details_of_edit_handler(update, context):
     context.user_data['note_name'] = update.message.text
-    update.message.reply_text(f"–ù–∞–ø–∏—à–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏ {update.message.text}")
+    update.message.reply_text(
+        f"–ù–∞–ø–∏—à–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏ {update.message.text}")
     return EDIT
 
 
 def final_edit_handler(update, context):
-    result = edit_note(context.user_data['note_name'], str(update.message.chat_id), update.message.text)
+    result = edit_note(
+        context.user_data['note_name'], str(
+            update.message.chat_id), update.message.text)
     update.message.reply_text(f"{result}")
     return ConversationHandler.END
 
@@ -98,11 +111,13 @@
     update.message.reply_text(f'–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏')
     return DELETE
 
+
 def delete_handler(update, context):
     result = delete_note(update.message.text, update.message.chat_id)
     update.message.reply_text(f"{result}")
     return ConversationHandler.END
 
+
 conversation_handler = ConversationHandler(
     entry_points=[CommandHandler('start', greeting),
                   CommandHandler('delete_all_notes', ask_to_delete_all_notes_handler),
Index: tic_tac_toe/tic tac toe.py
===================================================================
diff --git a/tic_tac_toe/tic tac toe.py b/tic_tac_toe/tic_tac_toe.py
rename from tic_tac_toe/tic tac toe.py
rename to tic_tac_toe/tic_tac_toe.py
--- a/tic_tac_toe/tic tac toe.py	
+++ b/tic_tac_toe/tic_tac_toe.py	
@@ -4,46 +4,46 @@
 
 def draw_colored_board(board):  # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å–∫–∏ —Å —Ü–≤–µ—Ç–æ–≤–æ–π –ø–∞–ª–∏—Ç—Ä–æ–π
     for i in board:
-        row = ''
+        row = ""
         for cell in i:
-            if cell == 'X':
-                row += f'| {Fore.RED}{cell}{Style.RESET_ALL} '
-            elif cell == 'O':
-                row += f'| {Fore.BLUE}{cell}{Style.RESET_ALL} '
+            if cell == "X":
+                row += f"| {Fore.RED}{cell}{Style.RESET_ALL} "
+            elif cell == "O":
+                row += f"| {Fore.BLUE}{cell}{Style.RESET_ALL} "
             else:
-                row += f'| {cell} '
-        print(row + '|')
-        print('-------------')
+                row += f"| {cell} "
+        print(row + "|")
+        print("-------------")
 
 
 def check_win(board, f_p, s_p):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–π–≥—Ä—ã—à
     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
     for i in range(3):
         if board[i] == [f_p, f_p, f_p]:
-            print(f'The player who played for {f_p} won!')
+            print(f"The player who played for {f_p} won!")
             return True
         elif board[i] == [s_p, s_p, s_p]:
-            print(f'The player who played for {s_p} won!')
+            print(f"The player who played for {s_p} won!")
             return True
         elif [board[0][i], board[1][i], board[2][i]] == [f_p, f_p, f_p]:
-            print(f'The player who played for {f_p} won!')
+            print(f"The player who played for {f_p} won!")
             return True
         elif [board[0][i], board[1][i], board[2][i]] == [s_p, s_p, s_p]:
-            print(f'The player who played for {s_p} won!')
+            print(f"The player who played for {s_p} won!")
             return True
 
     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏
     if [board[0][0], board[1][1], board[2][2]] == [f_p, f_p, f_p]:
-        print(f'The player who played for {f_p} won!')
+        print(f"The player who played for {f_p} won!")
         return True
     elif [board[0][0], board[1][1], board[2][2]] == [s_p, s_p, s_p]:
-        print(f'The player who played for {s_p} won!')
+        print(f"The player who played for {s_p} won!")
         return True
     elif [board[0][2], board[1][1], board[2][0]] == [f_p, f_p, f_p]:
-        print(f'The player who played for {f_p} won!')
+        print(f"The player who played for {f_p} won!")
         return True
     elif [board[0][2], board[1][1], board[2][0]] == [s_p, s_p, s_p]:
-        print(f'The player who played for {s_p} won!')
+        print(f"The player who played for {s_p} won!")
         return True
 
     return False
@@ -55,16 +55,16 @@
 
 
 def free_field_check(board, f_c, s_c):  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç—å –ø–æ–ª—è
-    if board[f_c][s_c] != ' ':
+    if board[f_c][s_c] != " ":
         return True
 
 
 def check_tie(board):
     for row in board:
         for cell in row:
-            if cell == ' ':
+            if cell == " ":
                 return False
-    print('Tie!')
+    print("Tie!")
     return True
 
 
@@ -75,25 +75,25 @@
 
 
 def ask_and_make_move(player, board):
-    print(f'{player} Move')
-    coordinate = input('write coordinate of x and y (e.g 0 0): ').strip().split()
+    print(f"{player} Move")
+    coordinate = input("write coordinate of x and y (e.g 0 0): ").strip().split()
     x, y = int(coordinate[0]), int(coordinate[1])
     if out_of_bounce(x, y):
-        print('you should write between 0 and 2 ;)')
+        print("you should write between 0 and 2 ;)")
         return False
     if free_field_check(board, y, x):
-        print('The field is already taken')
+        print("The field is already taken")
         return False
     board[y][x] = player
     return True
 
 
 def tic_tac_toe():
-    game_board = [[' ' for _ in range(3)] for _ in range(3)]
+    game_board = [[" " for _ in range(3)] for _ in range(3)]
     draw_colored_board(game_board)
 
-    first_player = 'X'
-    second_player = 'O'
+    first_player = "X"
+    second_player = "O"
 
     current_player = first_player
     while True:
@@ -105,7 +105,7 @@
                 if restart.lower() != "y":
                     break
                 else:
-                    game_board = [[' ' for i in range(3)] for y in range(3)]
+                    game_board = [[" " for _ in range(3)] for _ in range(3)]
                     draw_colored_board(game_board)
 
             if check_tie(game_board):
@@ -113,8 +113,7 @@
                 if restart.lower() != "y":
                     break
                 else:
-
-                    game_board = [[' ' for i in range(3)] for y in range(3)]
+                    game_board = [[" " for _ in range(3)] for _ in range(3)]
                     draw_colored_board(game_board)
 
 
Index: Notes_in_telegramm/notes2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\n\r\nPATH = f'../do_not_save_files/notes'  # –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\r\n\r\n\r\ndef logging(chat_id):\r\n    with open('../do_not_save_files/users.txt', 'r', encoding='utf-8') as f:  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é do_not_save_files\r\n        id_of_users = f.read()\r\n    if not str(chat_id) in id_of_users:\r\n        with open('../do_not_save_files/users.txt', 'a', encoding='utf-8') as f:\r\n            f.write(f'{str(chat_id)} ')\r\n\r\n\r\ndef check_extension(f):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏—è '.txt' –≤ –∫–æ–Ω—Ü–µ\r\n    try:\r\n        if not f.endswith('.txt'):\r\n            f += '.txt'\r\n        return f\r\n    except:\r\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\r\n\r\n\r\ndef check_directory(pth):  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏\r\n    try:\r\n        if not os.path.exists((pth)):\r\n            os.mkdir(pth)\r\n    except Exception as err:\r\n        return f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}'\r\n\r\n\r\ndef build_note(note_name, note_text, chat_id):  # —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏\r\n    try:\r\n        check_directory(f'{PATH}/{chat_id}')\r\n        note_name = check_extension(note_name)\r\n        with open(f'{PATH}/{chat_id}/{note_name}', 'w', encoding='utf-8') as f:\r\n            f.write(note_text)\r\n        return f'–§–∞–π–ª {note_name} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\\n'\r\n    except Exception as e:\r\n        return f\"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. {e}\"\r\n\r\n\r\ndef read_note(note_name, chat_id):  # –ü—Ä–æ—á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞\r\n    try:\r\n        note_name = check_extension(note_name)\r\n        if os.path.isfile(f'{PATH}/{chat_id}/{note_name}'):\r\n            with open(f'{PATH}/{chat_id}/{note_name}', 'r', encoding='utf-8') as f:\r\n                text = f.read()\r\n            return text\r\n        else:\r\n            return '–¢–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'\r\n    except Exception as err:\r\n        return f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {f}'\r\n\r\n\r\ndef edit_note(name, chat_id, new_text):  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏\r\n    try:\r\n        name = check_extension(name)\r\n        if os.path.exists(f'{PATH}/{chat_id}/{name}'):\r\n            with open(f'{PATH}/{chat_id}/{name}', 'w', encoding='utf-8') as f:\r\n                f.write(str(new_text))\r\n                return (f'–§–∞–π–ª \"{name}\" –ò–∑–º–µ–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!')\r\n        else:\r\n            return ('–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞, –º–æ–∂–µ—Ç –æ—à–∏–±—Å—è? \uD83D\uDE10')\r\n    except Exception as err:\r\n        return f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}'\r\n\r\n\r\ndef delete_note(name, chat_id):  # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏\r\n    try:\r\n        name = check_extension(name)\r\n        if os.path.isfile(f'{PATH}/{chat_id}/{name}'):\r\n            os.remove(f'{PATH}/{chat_id}/{name}')\r\n            return (f'–ó–∞–º–µ—Ç–∫–∞ {name} —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')\r\n        else:\r\n            return ('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ç–æ, —á–µ–≥–æ –∏ —Ç–∞–∫ –Ω–µ—Ç.')\r\n    except Exception as err:\r\n        return (f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')\r\n\r\n\r\ndef display_notes(chat_id):  # –í—ã–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã\r\n    try:\r\n        notes = os.listdir(f'{PATH}/{chat_id}')\r\n        reversed_notes = sorted(notes, key=len)\r\n        return reversed_notes\r\n    except Exception as err:\r\n        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')\r\n\r\n\r\ndef delete_all_notes(chat_id, answer):  # –£–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤\r\n    try:\r\n        if answer == 'y':\r\n            notes = os.listdir(f'{PATH}/{chat_id}')\r\n            reversed_notes = sorted(notes, key=len)\r\n            for y in reversed_notes:\r\n                y = check_extension(y)\r\n                if os.path.isfile(f'{PATH}/{chat_id}/{y}'):\r\n                    os.remove(f'{PATH}/{chat_id}/{y}')\r\n            return f'–í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! ({\", \".join(reversed_notes)})'\r\n        else:\r\n            return '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ'\r\n    except Exception as err:\r\n        return f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}'\r\n
===================================================================
diff --git a/Notes_in_telegramm/notes2.py b/Notes_in_telegramm/notes2.py
--- a/Notes_in_telegramm/notes2.py	
+++ b/Notes_in_telegramm/notes2.py	
@@ -42,7 +42,7 @@
 def read_note(note_name, chat_id):  # –ü—Ä–æ—á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
     try:
         note_name = check_extension(note_name)
-        if os.path.isfile(f'{PATH}/{chat_id}/{note_name}'):
+        if os.path.isfile(f'{PATH}/{chat_id}/{note_name}'):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞
             with open(f'{PATH}/{chat_id}/{note_name}', 'r', encoding='utf-8') as f:
                 text = f.read()
             return text
@@ -55,7 +55,7 @@
 def edit_note(name, chat_id, new_text):  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
     try:
         name = check_extension(name)
-        if os.path.exists(f'{PATH}/{chat_id}/{name}'):
+        if os.path.exists(f'{PATH}/{chat_id}/{name}'):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
             with open(f'{PATH}/{chat_id}/{name}', 'w', encoding='utf-8') as f:
                 f.write(str(new_text))
                 return (f'–§–∞–π–ª "{name}" –ò–∑–º–µ–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!')
@@ -79,11 +79,11 @@
 
 def display_notes(chat_id):  # –í—ã–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã
     try:
-        notes = os.listdir(f'{PATH}/{chat_id}')
+        notes = os.listdir(f'{PATH}/{chat_id}')  # –ó–∞–º–µ—Ç–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
         reversed_notes = sorted(notes, key=len)
-        return reversed_notes
+        return reversed_notes  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ
     except Exception as err:
-        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
+        return f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}'
 
 
 def delete_all_notes(chat_id, answer):  # –£–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Index: notes_in_python/notes.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\n\r\ndef check_extension(f):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ '.txt' –≤ –∫–æ–Ω—Ü–µ\r\n    try:\r\n        if not f.endswith('.txt'):\r\n            f += '.txt'\r\n        return f\r\n    except:\r\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\r\n\r\n\r\ndef build_note(note_name, note_text):  # –±–∏–ª–¥ –∑–∞–º–µ—Ç–∫–∏ (–î–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ create note)\r\n    try:\r\n        note_name = check_extension(note_name)\r\n        with open(note_name, 'w', encoding='utf-8') as f:\r\n            f.write(note_text)\r\n        print(f'–§–∞–π–ª {note_name} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\\n')\r\n    except:\r\n        print(\"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\")\r\n\r\n\r\ndef create_note():  # —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞\r\n    try:\r\n        Name = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞\\n')\r\n        Text = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç\\n')\r\n        build_note(Name, Text)\r\n    except:\r\n        print(\"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\")\r\n\r\n\r\ndef read_note(name):  # –ü—Ä–æ—á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞\r\n    try:\r\n        name = check_extension(name)\r\n        if os.path.isfile(name):\r\n            with open(name, 'r', encoding='utf-8') as f:\r\n                text = f.read()\r\n            print(text)\r\n            return True\r\n        else:\r\n            print('–¢–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')\r\n            return False\r\n    except:\r\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\r\n        return False\r\n\r\n\r\ndef edit_note(name):  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏\r\n    try:\r\n        name = check_extension(name)\r\n        if read_note(name):\r\n            new_text = input('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç: ')\r\n            with open(name, 'w', encoding='utf-8') as f:\r\n                f.write(new_text)\r\n                print(f'–§–∞–π–ª \"{name}\" –ò–∑–º–µ–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!')\r\n        else:\r\n            print('–ß—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ? \uD83D\uDE10')\r\n    except:\r\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\r\n\r\n\r\ndef delete_note(name):  # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏\r\n    try:\r\n        name = check_extension(name)\r\n        if os.path.isfile(name):\r\n            os.remove(name)\r\n            print(f'–ó–∞–º–µ—Ç–∫–∞ {name} —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')\r\n        else:\r\n            print('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ç–æ, —á–µ–≥–æ –∏ —Ç–∞–∫ –Ω–µ—Ç.')\r\n    except:\r\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\r\n\r\n\r\ndef display_notes():  # –í—ã–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã\r\n    try:\r\n        notes = [note for note in os.listdir() if note.endswith('.txt')]\r\n        reversed_notes = sorted(notes, key=len)\r\n        if notes:\r\n            for i in reversed_notes:\r\n                print(i)\r\n        else:\r\n            print('–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')\r\n    except:\r\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\r\n\r\n\r\ndef delete_all_notes():  # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤\r\n    try:\r\n        notes = [note for note in os.listdir() if note.endswith('.txt')]\r\n        if notes:\r\n            for n in notes:\r\n                delete_note(n)\r\n            print('–í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã!')\r\n        else:\r\n            print('–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')\r\n    except:\r\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\r\n        return True\r\n\r\n\r\ndef main():  # –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π\r\n    try:\r\n        print('–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ —Ü–∏—Ñ—Ä—É:', end='')\r\n        print('''\r\n    1 - —Å–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É\r\n    2 - –ü—Ä–æ—á–µ—Å—Ç—å –∑–∞–º–µ—Ç–∫—É\r\n    3 - –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É\r\n    4 - –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É\r\n    5 - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã\r\n    6 - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã\r\n    7 - –í—ã—Ö–æ–¥''')\r\n        func = int(input('–í–≤–æ–¥: '))\r\n        match func:\r\n            case 1:\r\n                create_note()\r\n                return True\r\n            case 2:\r\n                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—á–µ—Å—Ç—å?\\n')\r\n                read_note(note_name)\r\n                return True\r\n            case 3:\r\n                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\\n')\r\n                edit_note(note_name)\r\n                return True\r\n            case 4:\r\n                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?\\n')\r\n                delete_note(note_name)\r\n                return True\r\n            case 5:\r\n                display_notes()\r\n                return True\r\n            case 6:\r\n                output = input('–í—ã —É–≤–µ—Ä–µ–Ω—ã? \\n –î–∞ - \"y\" –ù–µ—Ç - \\\"n\\\" ')\r\n                if output == 'y':\r\n                    delete_all_notes()\r\n                    return True\r\n                else:\r\n                    return True\r\n            case 7:\r\n                ...\r\n            case _:\r\n                print('–¢—ã –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 7 ;)')\r\n                return True\r\n    except:\r\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')\r\n        return True\r\n\r\n\r\nif __name__ == '__main__':\r\n    while main():\r\n        pass\r\n
===================================================================
diff --git a/notes_in_python/notes.py b/notes_in_python/notes.py
--- a/notes_in_python/notes.py	
+++ b/notes_in_python/notes.py	
@@ -1,37 +1,29 @@
 import os
 
+
 def check_extension(f):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ '.txt' –≤ –∫–æ–Ω—Ü–µ
     try:
         if not f.endswith('.txt'):
             f += '.txt'
         return f
-    except:
-        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
+    except Exception as err:
+        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
 
 
-def build_note(note_name, note_text):  # –±–∏–ª–¥ –∑–∞–º–µ—Ç–∫–∏ (–î–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ create note)
+def build_note(note_name, note_text):  # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
     try:
         note_name = check_extension(note_name)
         with open(note_name, 'w', encoding='utf-8') as f:
             f.write(note_text)
         print(f'–§–∞–π–ª {note_name} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n')
-    except:
-        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
-
-
-def create_note():  # —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
-    try:
-        Name = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞\n')
-        Text = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç\n')
-        build_note(Name, Text)
-    except:
-        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
+    except Exception as err:
+        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
 
 
 def read_note(name):  # –ü—Ä–æ—á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
     try:
         name = check_extension(name)
-        if os.path.isfile(name):
+        if os.path.isfile(name):  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞
             with open(name, 'r', encoding='utf-8') as f:
                 text = f.read()
             print(text)
@@ -39,8 +31,8 @@
         else:
             print('–¢–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
             return False
-    except:
-        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
+    except Exception as err:
+        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
         return False
 
 
@@ -54,8 +46,8 @@
                 print(f'–§–∞–π–ª "{name}" –ò–∑–º–µ–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!')
         else:
             print('–ß—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ? üòê')
-    except:
-        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
+    except Exception as err:
+        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
 
 
 def delete_note(name):  # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
@@ -66,8 +58,8 @@
             print(f'–ó–∞–º–µ—Ç–∫–∞ {name} —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
         else:
             print('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ç–æ, —á–µ–≥–æ –∏ —Ç–∞–∫ –Ω–µ—Ç.')
-    except:
-        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
+    except Exception as err:
+        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
 
 
 def display_notes():  # –í—ã–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã
@@ -79,8 +71,8 @@
                 print(i)
         else:
             print('–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')
-    except:
-        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
+    except Exception as err:
+        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
 
 
 def delete_all_notes():  # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
@@ -92,8 +84,8 @@
             print('–í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã!')
         else:
             print('–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')
-    except:
-        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
+    except Exception as err:
+        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
         return True
 
 
@@ -101,7 +93,6 @@
     try:
         print('–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ —Ü–∏—Ñ—Ä—É:', end='')
         print('''
-    1 - —Å–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É
     2 - –ü—Ä–æ—á–µ—Å—Ç—å –∑–∞–º–µ—Ç–∫—É
     3 - –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
     4 - –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
@@ -110,9 +101,6 @@
     7 - –í—ã—Ö–æ–¥''')
         func = int(input('–í–≤–æ–¥: '))
         match func:
-            case 1:
-                create_note()
-                return True
             case 2:
                 note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—á–µ—Å—Ç—å?\n')
                 read_note(note_name)
@@ -138,10 +126,10 @@
             case 7:
                 ...
             case _:
-                print('–¢—ã –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 7 ;)')
+                print('–¢—ã –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 7 ;)')
                 return True
-    except:
-        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')
+    except Exception as err:
+        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
         return True
 
 
