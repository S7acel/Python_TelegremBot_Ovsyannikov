'''–ú–æ–¥—É–ª—å os –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–∞–π–ª–∞–º–∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã'''
import os


def check_extension(f):
    '''–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ '.txt' –≤ –∫–æ–Ω—Ü–µ. –î–æ–±–∞–≤–ª—è–µ—Ç –∫ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∞–π–ª–∞ .txt,
     –≤ —Å–ª—É—á–∞–µ –µ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è'''
    try:
        if not f.endswith('.txt'):
            f += '.txt'
        return f
    except AttributeError as err:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
        return None


def build_note(note_name, note_text):
    ''' —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞ —Å—á–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ with open'''
    try:
        note_name = check_extension(note_name)
        with open(note_name, 'w', encoding='utf-8') as f:
            f.write(note_text)
        print(f'–§–∞–π–ª {note_name} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n')
    except IOError as err:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. {err}")


def create_note():
    '''—Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞ —Å—á–µ—Ç –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ build_note()
    –∏ —Å–ø—Ä–∞—à–∏–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏ –∏ —Ç–µ–∫—Å—Ç–∞ –∑–∞–º–µ—Ç–∫–∏'''
    try:
        name = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞\n')
        text = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç\n')
        build_note(name, text)
    except (IOError, KeyboardInterrupt):
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")


def read_note(name):
    '''–†–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –∑–∞ —Å—á–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ –≤ —Å–∏—Å—Ç–µ–º–µ
     –∏ –≤—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞, –≤ —Å–ª—É—á–∞–µ –µ–≥–æ –Ω–∞–ª–∏—á–∏—è'''
    try:
        name = check_extension(name)
        if os.path.isfile(name):
            with open(name, 'r', encoding='utf-8') as f:
                text = f.read()
            print(text)
            return True
        print('–¢–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
        return False
    except IOError as err:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')
        return False


def edit_note(name):  # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
    '''–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ read note.
    –°–Ω–∞—á–∞–ª–∞ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ (–≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞)
    –∏ –¥–∞–ª–µ–µ —Ç—Ä–µ–±—É–µ—Ç –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è'''
    try:
        name = check_extension(name)
        if read_note(name):
            new_text = input('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç: ')
            with open(name, 'w', encoding='utf-8') as f:
                f.write(new_text)
                print(f'–§–∞–π–ª "{name}" –ò–∑–º–µ–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!')
        else:
            print('–ß—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ? üòê')
    except IOError as err:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')


def delete_note(name):
    '''–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –∑–∞ —Å—á–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ os.remove'''
    try:
        name = check_extension(name)
        if os.path.isfile(name):
            os.remove(name)
            print(f'–ó–∞–º–µ—Ç–∫–∞ {name} —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
        else:
            print('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ç–æ, —á–µ–≥–æ –∏ —Ç–∞–∫ –Ω–µ—Ç.')
    except IOError as err:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')


def display_notes():
    '''–í—ã–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã'''
    try:
        # —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ .txt —Ñ–∞–π–ª–æ–≤, –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        notes = [note for note in os.listdir()
                 if note.endswith('.txt')]
        reversed_notes = sorted(notes, key=len)
        if notes:
            for i in reversed_notes:
                print(i)
        else:
            print('–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')
    except IOError as err:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')


def delete_all_notes():
    '''–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫'''
    try:
        # —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ .txt —Ñ–∞–π–ª–æ–≤, –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        notes = [note for note in os.listdir()
                 if note.endswith('.txt')]
        if notes:
            for n in notes:
                delete_note(n)
            print('–í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã!')
        else:
            print('–§–∞–π–ª–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')
    except IOError as err:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {err}')


def main():
    ''' –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π'''
    result = True
    try:
        print('–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ —Ü–∏—Ñ—Ä—É:', end='')
        print('''
    1 - —Å–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É
    2 - –ü—Ä–æ—á–µ—Å—Ç—å –∑–∞–º–µ—Ç–∫—É
    3 - –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
    4 - –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
    5 - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    6 - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã
    7 - –í—ã—Ö–æ–¥''')
        func = int(input('–í–≤–æ–¥: '))
        match func:
            case 1:
                create_note()
            case 2:
                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—á–µ—Å—Ç—å?\n')
                read_note(note_name)
            case 3:
                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\n')
                edit_note(note_name)
            case 4:
                note_name = input('–ö–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?\n')
                delete_note(note_name)
            case 5:
                display_notes()
            case 6:
                output = input('–í—ã —É–≤–µ—Ä–µ–Ω—ã? \n –î–∞ - "y" –ù–µ—Ç - \"n\" ')
                if output == 'y':
                    delete_all_notes()
            case 7:
                ...
            case _:
                print('–¢—ã –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 7 ;)')
    except (ValueError, KeyboardInterrupt) as err:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! {err}')
        result = True
    return result



if __name__ == '__main__':
    while main():
        pass
